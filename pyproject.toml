[project]
name = "foia-assistant"
version = "0.1.0"
description = "AI-powered document classification for FOIA requests"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pyqt6>=6.5.0",
    "langgraph>=0.2.0",
    "langchain>=0.3.0",
    "langchain-openai>=0.2.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "ruff>=0.12.0",
    "mypy>=1.11.0",
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.24.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "W",    # pycodestyle warnings
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",  # Line length handled by Black
    "B008",  # Do not perform function calls in argument defaults
    "N818",  # Exception names should be named with an Error suffix
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__ files
"test_*.py" = ["F401"]    # Allow unused imports in test files

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langchain_openai.*",
    "langchain_core.*",
    "langgraph.*",
    "dotenv",
    "openai",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["test_langgraph", "test_api_key"]
disallow_untyped_defs = false
check_untyped_defs = true